@model bus_reservation.Models.Location

@{
    ViewData["Title"] = "Edit Location";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

}
<div class="container-fluid pt-4 px-4">
<h1>Edit</h1>

<h4>Location</h4>
    <div class="row g-4">
        <div class="bg-white rounded h-100 p-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="LocationId" />
            <input type="hidden" asp-for="CreatedAt" />
                <div class="col-sm-12 col-xl-12 mb-3">
                    <div class="form-group">
                        <label asp-for="LocationName" class="control-label"></label>
                        <input asp-for="LocationName" class="form-control" oninput="validateLocation(this)" required placeholder="Enter Valid Location Name" />
                        <!-- Update the id of this span to avoid conflict -->
                        <span id="LocationNameError" asp-validation-for="LocationName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-sm-12 col-xl-12 mt-4 mb-2">
                    <div class="form-group">
                        <input type="submit" value="Edit Location" class="btn btn-outline-success w-100" />
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="mt-3">
        <a class="btn btn-outline-success" asp-action="Index">Back to List</a>
    </div>
</div>

<script>
    function validateLocation(input) {
        const regex = /^[A-Za-z\s]*$/;
        const errorSpan = document.getElementById("LocationNameError"); // Use the new id for the error span
        if (!regex.test(input.value)) {
            errorSpan.textContent = "Location must consist of only letters and spaces.";
            input.setCustomValidity("Invalid input");
        } else {
            errorSpan.textContent = "";
            input.setCustomValidity("");
        }
    }

    function validateForm() {
        const inputs = document.querySelectorAll('input');
        let isValid = true;

        inputs.forEach(input => {
            if (!input.checkValidity()) {
                isValid = false;
                input.reportValidity();
            }
        });

        return isValid;
    }
</script>
